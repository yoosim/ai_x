[변수자료형 및 정규표현식]
▶ 변수 이름 규칙
	문자로 시작 (숫자로 시작 불가)
	문자, 숫자, _(언더바)로 변수명 작성 (- 다시 / .점 / ,쉼표 불가)
	함수명은 변수이름으로 가능하나 피한다. 만약에 써야한다면 int_식으로 _(언더바)를 이용
	파이썬 예약어(for,..)는 변수이름 사용 불가
	한글변수는 꼭 필요시에만 이용
	대문자로 시작한 변수, 함수명의 변수는 강력비추 (ex. Print =10)

▶1절 변수
	선언이 필요없고 할당과 동시에 타입이 셋팅
	문자,숫자,_로 변수명작성/숫자로 시작하거나 예약어는 사용불가
	다중 변수할당시 일괄 할당
	ex. a,b=10,20

▶2절 화면 i/o
	input()은 입력된 값을 문자로 반환 / 사용자로부터 값을 입력받기 위한 함수. 문자열로 입력 input은 숫자를 안 받고 텍스트로만 받음 
	ex.
	first = int(input('첫번째 수는?'))
	second = int(input('두번째 수는?'))
	sum = first + second
	print('합', sum)

	print(출력내용,sep= ' '. end='\n')

▶3절 기본 자료형 
	1)숫자형 : int(정수), float(실수), complex(복소수)
		int값/int값=>실수
		지수형 표현(큰수,작은수)은 => 실수

	2)문자형 : str, 문자슬라이싱, raw데이터(정규표현식, 파일경로)
		문자열 연산 : +(연결) *(반복)
		쌍따옴표 ("-")나 홑따옴표('-')이용
		※ 여러줄 주석은 ''' 주석 작성 ''' 으로 표현이 가능, 소스 코드 줄박꿈은 라인의 맨 마지막에 (\)작성
		- 탈출문자
			\n 줄 바꿈
			\t 탭
			\r 리턴 (행의 첫번째 열로 돌아옴)
			\0 null

		-문자열 인덱싱 (첫문자의 인덱스 : 0 / 음수는 맨뒤의 문자부터 -1)
			*문자변수 
			문자변수[from:stop] : from부터 stop앞까지 추출
			문자변수[from:stop:step] : from부터 stop앞까지 step씩 전진하면서 추출
			step 생략시 1 / from 생략시 처음부터 / stop 생략시 끝까지
		-raw 데이터 
			: 정규표현식 이용, 디렉토리 경로 표현식 이용
			*정규표현식 : 문자열을 검색하거나 조작할 때 패턴을 사용하여 특정 규칙에 맞는 문자열을 찾고 처리하는 방법
				●정규표현식 문법
				` 
				\d (숫자와 매치, [0-9]와 동일
				\D (숫자가 아닌것)
				\w (영문자나 숫자, [a-zA-Z0-9]
				\W (영문자나 숫자가 아닌 문자) 
				. (문자 하나를 뜻함)
				\.(.의미) ※여기에서 역슬래시는 해석하는것
				\-(-의미) 
				{2, 3} (2~3번 반복) ※반드시 앞에 숫자가 작아야 함.
				{4}    (4번 반복)
				{2,}   (2번 이상 반복)
				+      (1번 이상 반복)
				*      (0번 이상 반복)
	   			?      (0번 이나 1번 반복)

				활용 예시 
	  			  ex1. 전화번호 : 010-9999-9999 02-7777-8888  01099997777 0277778888 
          			         02)714-5656   010 1234 1234 010.1234.1234
          			         "[0-9]{2,3}[\-) .]?[0-9]{3,4}[\- .]?[0-9]{4}"
	 			   ex2. 이메일 : abc12@naver.com  / abc123@0to7.co.kr
          			         "\w{3,}@[a-zA-Z0-9가-힣]+(\.[a-zA-Z]+){1,2}"
	
	3)논리형 : True 또는 False 값
			False로 판단되는 값 : None, False, 숫자타입 0에 해당(0, 0.0, 0L, 0j),빈 문자, 빈튜플 또느 리스트, 빈 딕셔너리 
			True로 판단되는 값 : False로 판별되는 경우를 제외하고 모든 경우 

		
▶4절 포맷팅(formatting)
	포맷팅이란, 출력할 문자, 숫자, 날짜 데이터의 형식을 지정하는 것
	변수와 텍스트를 결합해서 보기 좋은 형식의 새로운 텍스틀를 만들 수 있음

	<format( )문법>
	f"{age}살 {name}님 반갑습니다."
	"{}살 {}님 반갑습니다.".format(age, name)
	"{[인덱스]:[공백대체문자][정렬방식][자릿수][타입]}".format(변수)
	    # 인덱스 : format함수 안의 매개변수의 순서
	    # 정렬방식 : <(왼쪽정렬), >(오른쪽정렬), ^(중앙정렬)
	    # 정수자릿수 : 출력될 자릿수d. 변수 내용보다 작은 자릿수가 지정되면 자릿수 무시
	    # 실수자릿수 : 출력될자릿수.소수점이하출력자릿수f
	    # 문자자릿수 : 전체확보될자릿수[.변수중출력할자릿수]s
	    # 타입 : d(10진수 정수), b(2진수), x(16진수), f(실수), s(문자)
	    # 공백대체문자를 쓸 경우 정렬방식을 반드시 기입해야 함
	    # 숫자의 경우 : 오른쪽정렬(기본값)
	    # 문자의 경우 : 왼쪽정렬(기본값)
	    # 변수보다 작은 자리수를 지정하면 자릿수가 무시되고 다 출력(정수, 문자 자리수)
	    # + : 부호를 출력
	    # = : 부호를 맨 앞에 출력
		*10진수=d / 16진수=x / 2진수=b 

	