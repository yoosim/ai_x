--[ IV ] DDL, DCL, DML

/*SQL
    -DCL
        사용자 계정 생성 CREATE USER,  권한부여 GRANT,  권한박탈 REVOKE, 사용자계정삭제 DROP USER
        트랜젝션 명령어 (
    -DDL : 테이블생성 CREATE TABLE  , 테이블구조변경 ALTER TABLE, 테이블 삭제 DROP TABLE / DDL은 취소 불가능 
    -DML : INSERT, SELECT, UPDATE, DELETE    
*/

----------------------------------
-- ★ DDL (테이블 생성,삭제)
----------------------------------

--1. 테이블 생성(CREATE TABLE 테이블명 ...) : 테이블 구조를 정의
CREATE TABLE BOOK(
    BOOKID        NUMBER(4),          -- BOOKID는 숫자 4자리
    BOOKNAME  VARCHAR2(20),    -- BOOKNAME필드의 타입은 문자 20BYTE (한글 하나 3바이트, 영어 2바이트)
    PUBLISHER  VARCHAR2(20),   
    RDATE          DATE,                    -- RDATE 필드의 타입은 DATE형
    PRICE           NUMBER(8,2),        -- PRICE 필드의 타입은 숫자 전체 8자리 중 소숫점 2자리 (실수저장 가능)
    PRIMARY KEY (BOOKID)            -- 제약조건 : BOOKID를 PRIMARY KEY 필드로 (NOT NULL, UNIQUE)
);

SELECT * FROM BOOK;
DESC BOOK;

--2. 테이블 삭제 
DROP TABLE BOOK; 

--테이블 삭제 후 BOOK 테이블 재생성 (PRIMARY KEY 필드명에 바로 지정)
CREATE TABLE BOOK(
    BID NUMBER(4) PRIMARY KEY,
    BNAME VARCHAR2(20),
    PUBLISHER VARCHAR2(20),
    RDATE DATE,
    PRICE NUMBER(8)
);

-- EX. DEPT01 : DEPTNO(숫자 2;PK), DNAME(문자 14), LOC(문자 13)
CREATE TABLE DEPT01(
    DEPTNO NUMBER(2) PRIMARY KEY,
    DNAME VARCHAR2(14),
    LOC VARCHAR2(13)
);

SELECT * FROM DEPT01; --DEPT01이 잘 만들어졌는지 테스트 (데이터만 없고 항목은 만들어짐)

SELECT * FROM DEPT;     -- 10,20,30,40

SELECT DISTINCT DEPTNO FROM EMP; -- 10,20,30만 있음
INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (9999, 'HONG',40);
SELECT * FROM EMP;
INSERT INTO EMP (EMPNO, ENAME, DEPTNO) VALUES (8200, 'ARAM',50); --외래키 제약조건?

ROLLBACK; --DML 취소 트레젝션 명령어

SELECT * FROM DEPT01;
--EMP 테이블과 유사한 EMP01 테이블 : EMPNO(숫자 4PK), ENAME(문자 10), SAL( 숫자 7,2), DEPTNO(숫자2 FK)
DROP TABLE EMP01;  --테이블 삭제 
DROP TABLE DEPT01;

CREATE TABLE EMP01(
    EMPNO NUMBER (4),
    ENAME VARCHAR2(10),
    SAL NUMBER(7,2),
    DEPTNO NUMBER(2), 
    PRIMARY KEY (EMPNO),
    FOREIGN KEY(DEPTNO) REFERENCES DEPT01(DEPTNO)
);

----------------------------------
-- ★ DML 
----------------------------------
--1. INSERT INTO 테이블명  (필드명1, 필드명2, .... 필드명n) VALUES (값1, 값2, ... 값n) 필드명과 값의 갯수가 같아야 함. 프라이머리키의 값은 반드시 작성해야 함 
    --INSERT INTO 테이블명 VALUES (값1, 값2, 값3,...값n) 필드명을 다 작성해야한다면 테이블명뒤에 필드명 안 쓰고 값만 쓰기
    SELECT * FROM DEPT01; -- 부모 테이블 
    SELECT * FROM EMP01;   
    SELECT * FROM BOOK;
    
    INSERT INTO DEPT01 VALUES (50, 'ACCOUNTING','SEOUL');
    INSERT INTO DEPT01 (DEPTNO, DNAME, LOC) VALUES (51, '전산', '신림');
    INSERT INTO DEPT01 (LOC, DNAME, DEPTNO) VALUES ('봉천', '영업',52 );
    INSERT INTO DEPT01 (DEPTNO, DNAME, LOC) VALUES (53, '연구', NULL); --명시적으로 NULL데이터 입력
    INSERT INTO DEPT01 (DEPTNO, DNAME) VALUES (60,'기획'); -- LOC이 묵시적으로 NULL 데이터 입력
    COMMIT; -- 트랜젝션 영역에 쌓여 있는 DML 명령어 일괄 실행 
    -- 서브쿼리를 이용한 INSERT 
        --EX. DEPT 테이블에서 10~30 부서의 내용을 DEPT01 테이블에 INSERT
        INSERT INTO DEPT01 SELECT * FROM DEPT WHERE DEPTNO<40;
    